on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: neo
          POSTGRES_PASSWORD: pass
          POSTGRES_DB: auth
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies
        run: npm install
        working-directory: ./backend

      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h 127.0.0.1 -U user -d test; do
            echo "Waiting for PostgreSQL to be ready..."
            sleep 1
          done

      - name: Seed the Database
        run: npx ts-node ./backend/src/database/seed.ts
        working-directory: ./backend

      - name: Run lint
        run: npm run lint
        working-directory: ./backend

      - name: Run unit tests
        env:
          DATABASE_URL: postgres://neo:pass@localhost:5432/auth
        run: npm run test
        working-directory: ./backend

      - name: Run e2e tests
        env:
          DATABASE_URL: postgres://neo:pass@localhost:5432/auth
        run: npm run test:e2e
        working-directory: ./backend

  build:
    runs-on: ubuntu-latest
    needs: test

    strategy:
      matrix:
        node-version: [16]

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: neo
          POSTGRES_PASSWORD: pass
          POSTGRES_DB: auth
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install
        working-directory: ./backend

      - name: Build project
        run: npm run build
        working-directory: ./backend

      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: backend-coverage-report
          path: backend/coverage